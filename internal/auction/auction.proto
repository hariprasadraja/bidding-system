syntax = "proto3";

package go.micro.service.auction;
option go_package="./auction";

service Auction {
	rpc Create(AuctionRequest) returns (Response) {}
	rpc Update(AuctionRequest) returns (Response) {}
	rpc Delete(DeleteRequest) returns (Response) {}
	rpc Get(GetRequest) returns (GetResponse) {}
	rpc GetLive(NoRequest) returns (All) {}
	rpc GetAll(NoRequest) returns (All) {}
	rpc IncreaseBid(Bid) returns(NoResponse) {}
}


message GetResponse {
	AuctionRequest auction = 1;
	repeated Bid bids = 2;
}

message Bid {
	int64 auction_id = 1;
	int64 user_id = 2;
  float bid_amount = 3;
}

message AuctionRequest {
	 int64 id = 1;
	 string name =2;
   string start_time = 3;
	 string end_time = 4;
	 float start_amount = 5;
	 string currency = 7;
}


message Response {
	int64 id = 1;
	string msg  = 2;
}


message DeleteRequest{
int64 id = 1;
}

message DeleteResponse{
int64 id = 1;
string msg = 2;
}

message GetRequest {
int64 id = 1;
}

message ExistRequest {
	 string email = 1;
	 string password = 2;
}

message ExistResponse {
	bool exist = 1;
}

message All {
	 repeated GetResponse auctions =1;
}

message NoResponse {}
message NoRequest {}
